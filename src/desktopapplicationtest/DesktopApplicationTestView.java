/*
 * DesktopApplicationTestView.java
 */

package desktopapplicationtest;


import JDBC_New.Auto_goods;
import JDBC_New.Manage;
import JDBC_New.Operate;
import JDBC_New.POI_Excel;
import JDBC_New.Search_from_name;
import JDBC_New.Time;
import java.awt.Graphics;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.DefaultCellEditor;
import javax.swing.table.TableColumn;
import java.awt.event.MouseEvent;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JTextField;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 * The application's main frame.
 */
public class DesktopApplicationTestView extends FrameView {

    public DesktopApplicationTestView(SingleFrameApplication app) {
        super(app);
        initComponents();
        
        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = DesktopApplicationTest.getApplication().getMainFrame();
            aboutBox = new DesktopApplicationTestAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        DesktopApplicationTest.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel(){
            public void paintComponent(Graphics g) {
                super.paintComponent(g);
                ImageIcon img = new ImageIcon("data/背景.jpg");
                g.drawImage(img.getImage(), 0, 0, null);
            }
        };
        jPanel1 = new javax.swing.JPanel();
        jButton_Information = new javax.swing.JButton();
        jButton_orderManage = new javax.swing.JButton();
        jButton_FinanceManage = new javax.swing.JButton();
        jButton1_Library = new javax.swing.JButton();
        jButton_home = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel_button = new javax.swing.JPanel();
        jButton_print = new javax.swing.JButton();
        jLabel_all = new javax.swing.JLabel();
        jLabel_money = new javax.swing.JLabel();
        jLabel_real = new javax.swing.JLabel();
        jLabel_moneyreal = new javax.swing.JLabel();
        jPanel_head = new javax.swing.JPanel();
        jComboBox_type = new javax.swing.JComboBox();
        jComboBox_name = new javax.swing.JComboBox();
        jLabel_type = new javax.swing.JLabel();
        jLabel_name = new javax.swing.JLabel();
        jLabel_date = new javax.swing.JLabel();
        jLabel_head = new javax.swing.JLabel();
        jXDatePicker_dateFirst = new org.jdesktop.swingx.JXDatePicker();
        jLabel_to = new javax.swing.JLabel();
        jXDatePicker_dateEnd = new org.jdesktop.swingx.JXDatePicker();
        jPanel_center = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_big = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_small = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jLabel_tips = new javax.swing.JLabel();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem_add = new javax.swing.JMenuItem();
        jMenuItem_delete = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItem_add1 = new javax.swing.JMenuItem();
        jMenuItem_delete1 = new javax.swing.JMenuItem();

        mainPanel.setName("mainPanel"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setOpaque(false);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(desktopapplicationtest.DesktopApplicationTest.class).getContext().getResourceMap(DesktopApplicationTestView.class);
        jButton_Information.setText(resourceMap.getString("jButton_Information.text")); // NOI18N
        jButton_Information.setName("jButton_Information"); // NOI18N
        jButton_Information.setOpaque(false);
        jButton_Information.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_InformationMouseClicked(evt);
            }
        });

        jButton_orderManage.setText(resourceMap.getString("jButton_orderManage.text")); // NOI18N
        jButton_orderManage.setName("jButton_orderManage"); // NOI18N
        jButton_orderManage.setOpaque(false);
        jButton_orderManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_orderManageMouseClicked(evt);
            }
        });

        jButton_FinanceManage.setText(resourceMap.getString("jButton_FinanceManage.text")); // NOI18N
        jButton_FinanceManage.setName("jButton_FinanceManage"); // NOI18N
        jButton_FinanceManage.setOpaque(false);
        jButton_FinanceManage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_FinanceManageMouseClicked(evt);
            }
        });

        jButton1_Library.setText(resourceMap.getString("jButton1_Library.text")); // NOI18N
        jButton1_Library.setName("jButton1_Library"); // NOI18N
        jButton1_Library.setOpaque(false);
        jButton1_Library.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1_LibraryMouseClicked(evt);
            }
        });

        jButton_home.setText(resourceMap.getString("jButton_home.text")); // NOI18N
        jButton_home.setName("jButton_home"); // NOI18N
        jButton_home.setOpaque(false);
        jPanel2.setVisible(false);//右边内容设为隐藏状态
        jButton_home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_homeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton_Information, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                        .addComponent(jButton_orderManage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_FinanceManage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1_Library, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addComponent(jButton_home, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton_home, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1_Library)
                .addGap(18, 18, 18)
                .addComponent(jButton_Information)
                .addGap(18, 18, 18)
                .addComponent(jButton_orderManage)
                .addGap(18, 18, 18)
                .addComponent(jButton_FinanceManage)
                .addContainerGap(379, Short.MAX_VALUE))
        );

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setOpaque(false);

        jPanel_button.setName("jPanel_button"); // NOI18N
        jPanel_button.setOpaque(false);

        jButton_print.setText(resourceMap.getString("jButton_print.text")); // NOI18N
        jButton_print.setName("jButton_print"); // NOI18N
        jButton_print.setOpaque(false);
        jButton_print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton_printMouseClicked(evt);
            }
        });

        jLabel_all.setFont(resourceMap.getFont("jLabel_all.font")); // NOI18N
        jLabel_all.setText(resourceMap.getString("jLabel_all.text")); // NOI18N
        jLabel_all.setName("jLabel_all"); // NOI18N

        jLabel_money.setFont(resourceMap.getFont("jLabel_money.font")); // NOI18N
        jLabel_money.setForeground(resourceMap.getColor("jLabel_money.foreground")); // NOI18N
        jLabel_money.setText(resourceMap.getString("jLabel_money.text")); // NOI18N
        jLabel_money.setName("jLabel_money"); // NOI18N

        jLabel_real.setFont(resourceMap.getFont("jLabel_real.font")); // NOI18N
        jLabel_real.setText(resourceMap.getString("jLabel_real.text")); // NOI18N
        jLabel_real.setName("jLabel_real"); // NOI18N

        jLabel_moneyreal.setFont(resourceMap.getFont("jLabel_moneyreal.font")); // NOI18N
        jLabel_moneyreal.setForeground(resourceMap.getColor("jLabel_moneyreal.foreground")); // NOI18N
        jLabel_moneyreal.setText(resourceMap.getString("jLabel_moneyreal.text")); // NOI18N
        jLabel_moneyreal.setName("jLabel_moneyreal"); // NOI18N

        javax.swing.GroupLayout jPanel_buttonLayout = new javax.swing.GroupLayout(jPanel_button);
        jPanel_button.setLayout(jPanel_buttonLayout);
        jPanel_buttonLayout.setHorizontalGroup(
            jPanel_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_buttonLayout.createSequentialGroup()
                .addComponent(jLabel_all)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_money)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel_real)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_moneyreal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 524, Short.MAX_VALUE)
                .addComponent(jButton_print)
                .addContainerGap())
        );
        jPanel_buttonLayout.setVerticalGroup(
            jPanel_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_buttonLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(jPanel_buttonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_all)
                    .addComponent(jLabel_money)
                    .addComponent(jLabel_real)
                    .addComponent(jLabel_moneyreal)
                    .addComponent(jButton_print))
                .addContainerGap())
        );

        jPanel_head.setName("jPanel_head"); // NOI18N
        jPanel_head.setOpaque(false);

        jComboBox_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_type.setName("jComboBox_type"); // NOI18N
        jComboBox_type.setOpaque(false);
        jComboBox_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_typeActionPerformed(evt);
            }
        });

        jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_name.setName("jComboBox_name"); // NOI18N
        jComboBox_name.setOpaque(false);
        jComboBox_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_nameActionPerformed(evt);
            }
        });

        jLabel_type.setText(resourceMap.getString("jLabel_type.text")); // NOI18N
        jLabel_type.setName("jLabel_type"); // NOI18N

        jLabel_name.setText(resourceMap.getString("jLabel_name.text")); // NOI18N
        jLabel_name.setName("jLabel_name"); // NOI18N

        jLabel_date.setText(resourceMap.getString("jLabel_date.text")); // NOI18N
        jLabel_date.setName("jLabel_date"); // NOI18N

        jLabel_head.setFont(resourceMap.getFont("jLabel_head.font")); // NOI18N
        jLabel_head.setText(resourceMap.getString("jLabel_head.text")); // NOI18N
        jLabel_head.setName("jLabel_head"); // NOI18N

        jXDatePicker_dateFirst.setName("jXDatePicker_dateFirst"); // NOI18N
        jXDatePicker_dateFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker_dateFirstActionPerformed(evt);
            }
        });

        jLabel_to.setText(resourceMap.getString("jLabel_to.text")); // NOI18N
        jLabel_to.setName("jLabel_to"); // NOI18N

        jXDatePicker_dateEnd.setName("jXDatePicker_dateEnd"); // NOI18N
        jXDatePicker_dateEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker_dateEndActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_headLayout = new javax.swing.GroupLayout(jPanel_head);
        jPanel_head.setLayout(jPanel_headLayout);
        jPanel_headLayout.setHorizontalGroup(
            jPanel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_headLayout.createSequentialGroup()
                .addGroup(jPanel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel_head, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_headLayout.createSequentialGroup()
                        .addGroup(jPanel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_type))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_name))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel_headLayout.createSequentialGroup()
                                .addComponent(jLabel_date)
                                .addGap(57, 57, 57))
                            .addComponent(jXDatePicker_dateFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_to)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jXDatePicker_dateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(447, Short.MAX_VALUE))
        );
        jPanel_headLayout.setVerticalGroup(
            jPanel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_headLayout.createSequentialGroup()
                .addComponent(jLabel_head, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_type)
                    .addComponent(jLabel_name)
                    .addComponent(jLabel_date))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_headLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jXDatePicker_dateFirst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_to)
                    .addComponent(jXDatePicker_dateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel_center.setName("jPanel_center"); // NOI18N
        jPanel_center.setOpaque(false);

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable_big.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable_big.setName("jTable_big"); // NOI18N
        jTable_big.setOpaque(false);
        jTable_big.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable_big.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_bigMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_big);

        jScrollPane2.setName("jScrollPane2"); // NOI18N
        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        jTable_small.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][9] ,
            new String [] {
                "编号", "货号", "产品名称", "印版名称", "色数", "印版规格",  "方式", "版数", "备注"
            }
        )
    );
    jTable_small.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    jTable_small.setName("jTable_small"); // NOI18N
    jTable_small.setOpaque(false);
    jTable_small.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jTable_small.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable_smallMouseClicked(evt);
        }
    });
    jScrollPane2.setViewportView(jTable_small);

    javax.swing.GroupLayout jPanel_centerLayout = new javax.swing.GroupLayout(jPanel_center);
    jPanel_center.setLayout(jPanel_centerLayout);
    jPanel_centerLayout.setHorizontalGroup(
        jPanel_centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_centerLayout.createSequentialGroup()
            .addGroup(jPanel_centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel_centerLayout.setVerticalGroup(
        jPanel_centerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_centerLayout.createSequentialGroup()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel_center, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel_head, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel_head, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel_center, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
    mainPanel.setLayout(mainPanelLayout);
    mainPanelLayout.setHorizontalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    mainPanelLayout.setVerticalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );

    menuBar.setName("menuBar"); // NOI18N

    fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
    fileMenu.setName("fileMenu"); // NOI18N

    jMenuItem1.setText(resourceMap.getString("jMenuItem1.text")); // NOI18N
    jMenuItem1.setName("jMenuItem1"); // NOI18N
    fileMenu.add(jMenuItem1);

    javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(desktopapplicationtest.DesktopApplicationTest.class).getContext().getActionMap(DesktopApplicationTestView.class, this);
    exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
    exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
    exitMenuItem.setName("exitMenuItem"); // NOI18N
    fileMenu.add(exitMenuItem);

    menuBar.add(fileMenu);

    helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
    helpMenu.setName("helpMenu"); // NOI18N

    aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
    aboutMenuItem.setText(resourceMap.getString("aboutMenuItem.text")); // NOI18N
    aboutMenuItem.setName("aboutMenuItem"); // NOI18N
    helpMenu.add(aboutMenuItem);

    menuBar.add(helpMenu);

    statusPanel.setName("statusPanel"); // NOI18N

    statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

    statusMessageLabel.setName("statusMessageLabel"); // NOI18N

    statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

    progressBar.setName("progressBar"); // NOI18N

    jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
    jLabel2.setName("jLabel2"); // NOI18N

    jLabel_tips.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel_tips.setText(resourceMap.getString("jLabel_tips.text")); // NOI18N
    jLabel_tips.setName("jLabel_tips"); // NOI18N

    javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
    statusPanel.setLayout(statusPanelLayout);
    statusPanelLayout.setHorizontalGroup(
        statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
        .addGroup(statusPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(statusMessageLabel)
                .addGroup(statusPanelLayout.createSequentialGroup()
                    .addComponent(jLabel2)
                    .addGap(123, 123, 123)
                    .addComponent(jLabel_tips, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(statusAnimationLabel)))
            .addContainerGap())
    );
    statusPanelLayout.setVerticalGroup(
        statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(statusPanelLayout.createSequentialGroup()
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(statusPanelLayout.createSequentialGroup()
                    .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(statusMessageLabel)
                        .addComponent(statusAnimationLabel)
                        .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(3, 3, 3))
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel_tips, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))))
    );

    jPopupMenu1.setName("jPopupMenu1"); // NOI18N

    jMenuItem_add.setText(resourceMap.getString("jMenuItem_add.text")); // NOI18N
    jMenuItem_add.setName("jMenuItem_add"); // NOI18N
    jMenuItem_add.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mousePressed(java.awt.event.MouseEvent evt) {
            jMenuItem_addMousePressed(evt);
        }
    });
    jPopupMenu1.add(jMenuItem_add);

    jMenuItem_delete.setText(resourceMap.getString("jMenuItem_delete.text")); // NOI18N
    jMenuItem_delete.setName("jMenuItem_delete"); // NOI18N
    jMenuItem_delete.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mousePressed(java.awt.event.MouseEvent evt) {
            jMenuItem_deleteMousePressed(evt);
        }
    });
    jPopupMenu1.add(jMenuItem_delete);

    jPopupMenu2.setName("jPopupMenu2"); // NOI18N

    jMenuItem_add1.setText(resourceMap.getString("jMenuItem_add1.text")); // NOI18N
    jMenuItem_add1.setName("jMenuItem_add"); // NOI18N
    jMenuItem_add1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mousePressed(java.awt.event.MouseEvent evt) {
            jMenuItem_add1MousePressed(evt);
        }
    });
    jPopupMenu2.add(jMenuItem_add1);

    jMenuItem_delete1.setText(resourceMap.getString("jMenuItem_delete1.text")); // NOI18N
    jMenuItem_delete1.setName("jMenuItem_delete1"); // NOI18N
    jMenuItem_delete1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mousePressed(java.awt.event.MouseEvent evt) {
            jMenuItem_delete1MousePressed(evt);
        }
    });
    jPopupMenu2.add(jMenuItem_delete1);

    setComponent(mainPanel);
    setMenuBar(menuBar);
    setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_InformationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_InformationMouseClicked
        if(jTable_small.isEditing())
              jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
        jLabel_head.setText("客户资料");
        jLabel_tips.setText("Tips：修改后请及时按保存按钮保存数据");
        jLabel_money.setVisible(false);//左下角总额显示设置
        jLabel_all.setVisible(false);//左下角总额显示设置
        jLabel_real.setVisible(false);
        jLabel_moneyreal.setVisible(false);
        jScrollPane2.setVisible(true);
        jPanel2.setVisible(true);//右边内容设为显示状态
        jButton_print.setVisible(false);  //打印按钮

        type = 2;//客户资料
        jComboBox_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "客户", "供应商" }));       
        jComboBox_type.setSelectedIndex(0);
        jLabel_date.setVisible(false);
        jLabel_to.setVisible(false);
        jXDatePicker_dateFirst.setVisible(false);
        jXDatePicker_dateEnd.setVisible(false);        
    }//GEN-LAST:event_jButton_InformationMouseClicked

    private void jButton_orderManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_orderManageMouseClicked
        if(jTable_small.isEditing())
              jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
        jScrollPane2.setVisible(true);
        jPanel2.setVisible(true);//右边内容设为显示状态
        jLabel_money.setVisible(false);//左下角总额显示设置
        jLabel_all.setVisible(false);//左下角总额显示设置
        jLabel_real.setVisible(false);
        jLabel_moneyreal.setVisible(false);
        jButton_print.setVisible(false);  //打印按钮
        jLabel_head.setText("订单管理");
        jLabel_tips.setText("Tips：修改后请及时按保存按钮保存数据");

        type = 3;//订单管理
        jComboBox_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "订单","进货单" }));       
        
        jComboBox_type.setSelectedIndex(0);   //第一个下拉框选择第一个选项
        jLabel_date.setVisible(true);
        jLabel_to.setVisible(true);
        jXDatePicker_dateFirst.setVisible(true);
        jXDatePicker_dateEnd.setVisible(true);
        jXDatePicker_dateFirst.setFormats("yyyy-MM-dd");  //日期的格式
        jXDatePicker_dateEnd.setFormats("yyyy-MM-dd");  //日期的格式
        
    }//GEN-LAST:event_jButton_orderManageMouseClicked

    private void jButton_FinanceManageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_FinanceManageMouseClicked
        if(jTable_small.isEditing())
              jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
        jScrollPane2.setVisible(false);//下面的表
        jPanel2.setVisible(true);//右边内容设为显示状态
        jLabel_money.setVisible(true);//左下角总额显示设置
        jLabel_all.setVisible(true);//左下角总额显示设置
        jLabel_head.setText("财务管理");
        jLabel_tips.setText("Tips：财务管理");

        type = 4;//财务管理
        jComboBox_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "全部财务","对账单", "供应商汇总表", "客户汇总表", "送货单" }));
        jTable_big.setModel(new javax.swing.table.DefaultTableModel(){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                                return   false;
                        }

        });
        jComboBox_type.setSelectedIndex(0);
        jLabel_date.setVisible(true);
        jLabel_to.setVisible(true);
        jXDatePicker_dateFirst.setVisible(true);
        jXDatePicker_dateEnd.setVisible(true);
    }//GEN-LAST:event_jButton_FinanceManageMouseClicked

    private void jButton1_LibraryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1_LibraryMouseClicked
        if(jTable_small.isEditing())
              jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
        jScrollPane2.setVisible(false);//下面的表
        jPanel2.setVisible(true);//右边内容设为显示状态
        jLabel_money.setVisible(false);//左下角总额显示设置
        jLabel_all.setVisible(false);//左下角总额显示设置
        jLabel_real.setVisible(false);
        jLabel_moneyreal.setVisible(false);
        jButton_print.setVisible(false);  //打印按钮
        jLabel_head.setText("产品库");
        jLabel_tips.setText("Tips：修改后请及时按保存按钮保存数据");

        type = 1;//产品库
        jComboBox_type.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "产品资料","物料资料" }));
        
        jComboBox_type.setSelectedIndex(0);
        jLabel_date.setVisible(false);
        jLabel_to.setVisible(false);
        jXDatePicker_dateFirst.setVisible(false);
        jXDatePicker_dateEnd.setVisible(false);
    }//GEN-LAST:event_jButton1_LibraryMouseClicked

    private void jTable_smallMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_smallMouseClicked
       if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
        if(evt.getButton()==MouseEvent.BUTTON3)
            { if(jTable_small.isEditing())
                 jTable_small.getCellEditor().stopCellEditing();
              jPopupMenu2.show(evt.getComponent(), evt.getX(), evt.getY());
              jTable_small.setRowSelectionInterval(evt.getY()/jTable_small.getRowHeight(),evt.getY()/jTable_small.getRowHeight());
            }

    }//GEN-LAST:event_jTable_smallMouseClicked

    private void jTable_bigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_bigMouseClicked
        /*table右键菜单*/
        if(jTable_small.isEditing())
                jTable_small.getCellEditor().stopCellEditing();
        if(evt.getButton()==MouseEvent.BUTTON3)
            if(type==1||type==2||type==3)
            { if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
              jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
              jTable_big.setRowSelectionInterval(evt.getY()/jTable_big.getRowHeight(),evt.getY()/jTable_big.getRowHeight());
              // jTable_father.setColumnSelectionInterval(evt.getX()/jTable_father.getColumnModel().getTotalColumnWidth(),evt.getX()/jTable_father.getColumnModel().getTotalColumnWidth());
            }
        if(evt.getButton()==MouseEvent.BUTTON1)
          { if(type==4) return;
            if(type==2||type==3){                
                 Operate opr = new Operate();
                  String[][] cpks = opr.query_small(type,jComboBox_type.getSelectedIndex(),(String)jTable_big.getValueAt(jTable_big.getSelectedRow(), type));

                  ((DefaultTableModel)jTable_small.getModel()).setRowCount(0);
                if(cpks!=null){               
                  for(int i=0;i<cpks.length;i++)
                      ((DefaultTableModel) jTable_small.getModel()).addRow(cpks[i]);                 
                }
              }


   jTable_small.getModel().addTableModelListener(new TableModelListener() {
      public void tableChanged(TableModelEvent e) {
       if(jTable_small.isEditing()&&save){
        int row = jTable_small.getEditingRow();
        int column = jTable_small.getEditingColumn();
        String[] s = new String[jTable_small.getColumnCount()];
        for(int i=0;i<s.length;i++)
          s[i] = (String)jTable_small.getValueAt(row, i);

            Operate opr = new Operate();
            opr.update(type/*客户资料/订单管理*/,jComboBox_type.getSelectedIndex(),
                    (String)jTable_small.getValueAt(jTable_small.getSelectedRow(), 0),
                     s,                   
                    (String)jTable_big.getValueAt(jTable_big.getSelectedRow(), type));
       if(type==3){
       double money =0;
       for(int i=0;i<jTable_small.getRowCount();i++){
         String value = ((String)jTable_small.getValueAt(i,6));
         if(value!=null&&!value.equals(""))
          if(value.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(value);
       }          
       jTable_big.setValueAt(String.valueOf(money), jTable_big.getSelectedRow(), 5);
        String[] ss = new String[jTable_big.getColumnCount()];
            for(int i=0;i<ss.length;i++)
            ss[i] = (String)jTable_big.getValueAt(jTable_big.getSelectedRow(), i);
            opr.update(type/*客户资料/订单管理*/,jComboBox_type.getSelectedIndex(),ss,
                    (String)jTable_big.getValueAt(jTable_big.getSelectedRow(), type));
        }
       }
        }
       });
       
      if(jComboBox_type.getSelectedIndex()==0){
          TableColumn tableColumn_Customer_Information_button = null;
          TableColumn tableColumn_Customer_Information_button1 = null;
          if(type==1) {
               tableColumn_Customer_Information_button = jTable_big.getColumn("印版规格");
               tableColumn_Customer_Information_button1 = jTable_big.getColumn("色数");
          }
          if(type==2||type==3){
               tableColumn_Customer_Information_button = jTable_small.getColumn("印版规格");
               tableColumn_Customer_Information_button1 = jTable_small.getColumn("色数");
          }
          
        javax.swing.JComboBox yinbanguige = new javax.swing.JComboBox();
        yinbanguige.setEditable(true);//可输入
        yinbanguige.addItem("对开*500");
        yinbanguige.addItem("三开*500");
        yinbanguige.addItem("四开*500");        
        tableColumn_Customer_Information_button.setCellEditor(new DefaultCellEditor(yinbanguige));
        javax.swing.JComboBox seshu = new javax.swing.JComboBox();
        seshu.setEditable(true);//可输入
        seshu.addItem("单色");
        seshu.addItem("双色");
        seshu.addItem("四色");        
        tableColumn_Customer_Information_button1.setCellEditor(new DefaultCellEditor(seshu));        
              }
       if(type==3){
            String sname ;
            if(jComboBox_type.getSelectedIndex()==0)
            sname = "产品名称";
            else sname = "物料名称";
            Search_from_name sfn = new Search_from_name();
            String[] s = sfn.getName(jComboBox_type.getSelectedIndex(),(String)jTable_big.getValueAt(jTable_big.getSelectedRow(), 2));
            final javax.swing.JComboBox name = new javax.swing.JComboBox();
            name.setEditable(true);//可输入
            for(int i=0;i<s.length;i++)
              name.addItem(s[i]);
            TableColumn tableColumn_Customer_Information_button2 = jTable_small.getColumn(sname);
            tableColumn_Customer_Information_button2.setCellEditor(new DefaultCellEditor(name));
            name.addItemListener(new ItemListener() {
                    public void itemStateChanged(ItemEvent e) {
                       if(jTable_small.getSelectedRow()!=-1)
                       if(name.getSelectedIndex()!=-1){
                            save=false;
                            Auto_goods ags = new Auto_goods();
                            int row = jTable_small.getSelectedRow();
                            String[] s = ags.auto_goods(jComboBox_type.getSelectedIndex(),
                                            (String)jTable_big.getValueAt(jTable_big.getSelectedRow(), 2),
                                            (String)name.getSelectedItem());

                            if(jComboBox_type.getSelectedIndex()==0)
                            {                                
                                jTable_small.setValueAt(s[0], row, 1);
                                jTable_small.setValueAt(s[1], row, 2);
                                jTable_small.setValueAt(s[2], row, 4);
                                jTable_small.setValueAt(s[3], row, 7);
                                jTable_small.setValueAt(s[4], row, 8);
                                jTable_small.setValueAt(s[5], row, 9);
                                jTable_small.setValueAt(s[6], row, 10);
                                jTable_small.setValueAt(s[7], row, 11);
                                save=true;
                                jTable_small.setValueAt(s[8], row, 12);
                            }
                            if(jComboBox_type.getSelectedIndex()==1)
                            {
                                jTable_small.setValueAt(s[0], row, 1);
                                jTable_small.setValueAt(s[1], row, 2);
                                jTable_small.setValueAt(s[2], row, 4);
                                save=true;
                                jTable_small.setValueAt(s[3], row, 8);
                            }
                        }
                       }
                    });
        }
           }
    }//GEN-LAST:event_jTable_bigMouseClicked
    
    private void jButton_homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_homeMouseClicked
        if(jTable_small.isEditing())
              jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
        jPanel2.setVisible(false);//右边内容设为隐藏状态
        jLabel_tips.setText("Tips：点击左边功能选择功能");
        type = 0;  //主页
    }//GEN-LAST:event_jButton_homeMouseClicked

    private void jButton_printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton_printMouseClicked
        if(jComboBox_type.getSelectedIndex()==1){
            if(jComboBox_name.getSelectedIndex()!=-1&&jXDatePicker_dateFirst.getDate()!=null&&jXDatePicker_dateEnd.getDate()!=null){
                POI_Excel pe = new POI_Excel();
                pe.read(1,(String)jComboBox_name.getSelectedItem(),
                        new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateFirst.getDate()),
                         new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateEnd.getDate()), null);
            }
          }
        if(jComboBox_type.getSelectedIndex()==4)
            if(jTable_big.getSelectedRow()!=-1){
                POI_Excel pe = new POI_Excel();
                pe.read(4, null, null, null, (String)jTable_big.getValueAt(jTable_big.getSelectedRow(),1));
          }
    }//GEN-LAST:event_jButton_printMouseClicked

    private void jComboBox_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_typeActionPerformed
        if(jTable_small.isEditing())
              jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
        jXDatePicker_dateFirst.setDate(null);  //清除日期选择框
        jXDatePicker_dateEnd.setDate(null);  //清除日期选择框
        Operate opr = new Operate();
        /*产品库*/
        if(jComboBox_type.getSelectedItem()=="产品资料"){
            jLabel_tips.setText("Tips：产品资料");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][11] ,
            new String [] {
            "客户名称", "编号", "货号", "产品名称","印版名称", "色数", "印版规格", "规格方式", "版数","单价(时间)", "备注"
                }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                            if(mColIndex==1)
                                return   false;
                            else  return true;
                        }

        });
            
            String[][] cpks = opr.query(jComboBox_type.getSelectedIndex());
            for(int i=0;i<cpks.length;i++)
               ((DefaultTableModel)jTable_big.getModel()).addRow(cpks[i]);
            Search_from_name sfn = new Search_from_name();
            jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(sfn.getName(0)));
        }

        if(jComboBox_type.getSelectedItem()=="物料资料"){
           jLabel_tips.setText("Tips：物料资料");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][6] ,
            new String [] {
            "供应商名称", "编号", "物料编号", "物料名称","单价(时间)","备注"
                }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                            if(mColIndex==1)
                                return   false;
                            else  return true;
                        }

        });
            
           String[][] cpks = opr.query(jComboBox_type.getSelectedIndex());
            for(int i=0;i<cpks.length;i++)
               ((DefaultTableModel)jTable_big.getModel()).addRow(cpks[i]);
           Search_from_name sfn = new Search_from_name();
            jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(sfn.getName(1)));

        }

        /*客户资料*/
       
        if(jComboBox_type.getSelectedItem()=="客户"){
            jLabel_tips.setText("Tips：客户客户");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][12],
            new String [] {
            "编号", "客户编码", "客户名称", "联系人", "电话", "传真", "手机", "QQ", "地址", "开户行", "银行帐号", "备注"
            }
        ));
            jTable_big.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable_big.getColumnModel().getColumn(0).setMinWidth(0);
            jTable_big.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable_big.getColumnModel().getColumn(0).setResizable(false);
            jTable_small.setModel(new javax.swing.table.DefaultTableModel(
        new Object [0][10],
        new String [] {
         "编号", "货号", "产品名称", "印版名称", "色数", "印版规格",  "规格方式", "版数","单价（时间）", "备注"
           }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                            if(mColIndex==0)
                                return   false;
                            else  return true;
                        }

        });

             String[][] cpks = opr.query_big(type,jComboBox_type.getSelectedIndex());
            for(int i=0;i<cpks.length;i++)
               ((DefaultTableModel)jTable_big.getModel()).addRow(cpks[i]);

          Search_from_name sfn = new Search_from_name();
          String[] s = sfn.getName(2);
          jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(s));   //第二个下拉框

       


        }
        if(jComboBox_type.getSelectedItem()=="供应商"){
            jLabel_tips.setText("Tips：供应商供应商");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][11] ,
            new String [] {
            "编号", "供应商编码","供应商名称", "联系人", "电话", "传真", "手机", "QQ","开户行", "银行帐号", "备注"
            }
        ));
            jTable_big.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable_big.getColumnModel().getColumn(0).setMinWidth(0);
            jTable_big.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable_big.getColumnModel().getColumn(0).setResizable(false);
            jTable_small.setModel(new javax.swing.table.DefaultTableModel(
        new Object [0][5],
        new String [] {
         "编号", "物料编号", "物料名称", "单价(时间)", "备注"
           }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                            if(mColIndex==0)
                                return   false;
                            else  return true;
                        }

        });

              String[][] cpks = opr.query_big(type,jComboBox_type.getSelectedIndex());
            for(int i=0;i<cpks.length;i++)
               ((DefaultTableModel)jTable_big.getModel()).addRow(cpks[i]);

          Search_from_name sfn = new Search_from_name();
          jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(sfn.getName(3)));
        }

        /*订单管理*/
        if(jComboBox_type.getSelectedItem()=="订单"){
            jLabel_tips.setText("Tips：送货单,订货单");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][8] ,
            new String [] {
            "编号", "客户编码","客户名称","订单号",  "预交日期","金额","已收金额","备注"
            }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                            if(mColIndex==5||mColIndex==1)
                            {
                                jLabel_tips.setText("Tips：客户编码与金额不能修改");
                                return false;
                            }
                            else  return true;
                        }

        });
            jTable_big.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable_big.getColumnModel().getColumn(0).setMinWidth(0);
            jTable_big.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable_big.getColumnModel().getColumn(0).setResizable(false);
            jTable_big.getColumn("订单号").setCellEditor(new DefaultCellEditor(new JTextField()){
                @Override
                public   boolean   stopCellEditing()
                    {
                     String   value=(String)this.getCellEditorValue();
                     if(value.length()<9){
                        ((JTextField)this.getComponent()).requestFocus();
                        jLabel_tips.setText("Tips：订单号必须大于8位，如201102231,前8位为日期");
                        return   false;
                        }
                    else
                        return   super.stopCellEditing();
                    }
            });
              
            
            jTable_small.setModel(new javax.swing.table.DefaultTableModel(
        new Object [0][13],
        new String [] {
         "编号", "货号", "产品名称","投产数量","单价","单位", "金额","印版名称", "色数", "印版规格",  "规格方式", "版数", "备注"
           }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                            if(mColIndex==0)
                                return   false;
                            else  return true;
                        }

        });
             String[][] cpks = opr.query_big(type,jComboBox_type.getSelectedIndex());
             for(int i=0;i<cpks.length;i++)
               ((DefaultTableModel)jTable_big.getModel()).addRow(cpks[i]);

           Search_from_name sfn = new Search_from_name();
           String[] s = sfn.getName(2);
          jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(sfn.getName(2)));

        final javax.swing.JComboBox name = new javax.swing.JComboBox();
        name.setEditable(true);//可输入
        for(int i=0;i<s.length;i++)
          name.addItem(s[i]);
        TableColumn tableColumn_Customer_Information_button = jTable_big.getColumn("客户名称");
        tableColumn_Customer_Information_button.setCellEditor(new DefaultCellEditor(name));
        name.addItemListener(new ItemListener() {
                    public void itemStateChanged(ItemEvent e) {
                        if(jTable_big.getSelectedRow()!=-1)
                           if(name.getSelectedIndex()!=-1){
                            save=false;
                            Search_from_name sfn = new Search_from_name();
                            int row = jTable_big.getSelectedRow();
                            String s = sfn.name_num(jComboBox_type.getSelectedIndex(),(String)name.getSelectedItem());
                            jTable_big.setValueAt(s, row, 1);
                            save=true;                            
                        }
                    }
            });
        
        }
        if(jComboBox_type.getSelectedItem()=="进货单"){
            jLabel_tips.setText("Tips：进货单,加工单");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][8] ,
            new String [] {
            "编号", "供应商编码","供应商名称","进货单号", "进货日期","金额","已付金额","备注"
            }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                            if(mColIndex==5||mColIndex==1)
                            {
                                jLabel_tips.setText("Tips：供应商编码与金额不能修改");
                                return false;
                            }

                            else  return true;
                        }

        });
            jTable_big.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable_big.getColumnModel().getColumn(0).setMinWidth(0);
            jTable_big.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable_big.getColumnModel().getColumn(0).setResizable(false);
        jTable_big.getColumn("进货单号").setCellEditor(new DefaultCellEditor(new JTextField()){
                @Override
                public   boolean   stopCellEditing()
                    {
                     String   value=(String)this.getCellEditorValue();
                     if(value.length()<9){
                        ((JTextField)this.getComponent()).requestFocus();
                         jLabel_tips.setText("Tips：进货单号必须大于8位，如201102231,前8位为日期");
                        return   false;
                        }
                    else
                        return   super.stopCellEditing();
                    }
            });

            jTable_small.setModel(new javax.swing.table.DefaultTableModel(
        new Object [0][9],
        new String [] {
         "编号", "物料编号", "物料名称","物料数量","单价","单位", "金额","要求","备注"
           }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                            if(mColIndex==0)
                                return   false;
                            else  return true;
                        }

        });

              String[][] cpks = opr.query_big(type,jComboBox_type.getSelectedIndex());
              for(int i=0;i<cpks.length;i++)
                 ((DefaultTableModel)jTable_big.getModel()).addRow(cpks[i]);
              
          Search_from_name sfn = new Search_from_name();
          String[] s = sfn.getName(3);
          jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(s));

        final javax.swing.JComboBox name = new javax.swing.JComboBox();
        name.setEditable(true);//可输入
        for(int i=0;i<s.length;i++)
          name.addItem(s[i]);
        TableColumn tableColumn_Customer_Information_button = jTable_big.getColumn("供应商名称");
        tableColumn_Customer_Information_button.setCellEditor(new DefaultCellEditor(name));
        name.addItemListener(new ItemListener() {
                    public void itemStateChanged(ItemEvent e) {
                        if(jTable_big.getSelectedRow()!=-1)
                           if(name.getSelectedIndex()!=-1){
                            save=false;
                            Search_from_name sfn = new Search_from_name();
                            int row = jTable_big.getSelectedRow();
                            String s = sfn.name_num(jComboBox_type.getSelectedIndex(),(String)name.getSelectedItem());
                            jTable_big.setValueAt(s, row, 1);
                            save=true;
                        }
                    }
            });
        }

        /*财务管理*/
        if(jComboBox_type.getSelectedItem()=="全部财务"){
            jLabel_tips.setText("Tips：全部");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][8],
            new String [] {
            "编码", "日期", "单号", "往来单位", "收支项目", "收入", "支出", "结余"
            }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                                return   false;
                        }

        });
         jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(new String[] {}));  //读取数据库显示

           jXDatePicker_dateFirst.setFormats("yyyy-MM");  //日期的格式
           jXDatePicker_dateEnd.setFormats("yyyy-MM");  //日期的格式
           jLabel_real.setVisible(false);
           jLabel_moneyreal.setVisible(false);
           jButton_print.setVisible(false);  //打印按钮

           Manage mm = new Manage();
           String[][] mms = mm.all_manage();
           ((DefaultTableModel)jTable_big.getModel()).setRowCount(0);
           for(int i=0;i<mms.length;i++){               
               if(mms[i][0]==null) break;
              ((DefaultTableModel)jTable_big.getModel()).addRow(mms[i]);            
             }

       double money =0;
       for(int i=0;i<jTable_big.getRowCount();i++){
         String in = ((String)jTable_big.getValueAt(i,5));
         String out = ((String)jTable_big.getValueAt(i,6));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            money = money - Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
        }
        if(jComboBox_type.getSelectedItem()=="对账单"){
            jLabel_tips.setText("Tips：客户每月对账单");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][9],
            new String [] {
            "编号",  "客户名称", "产品名称", "投产数量", "单价", "总价","已付款", "出货时间",  "备注"
            }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                                return   false;
                        }

        });
            Search_from_name sfn = new Search_from_name();
            jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(sfn.getName(2)));
            jXDatePicker_dateFirst.setFormats("yyyy-MM");  //日期的格式
            jXDatePicker_dateEnd.setFormats("yyyy-MM");  //日期的格式
            jLabel_real.setVisible(true);
            jLabel_moneyreal.setVisible(true);
            jButton_print.setVisible(true);  //打印按钮

             Manage manage = new Manage();
            String[][] mms = manage.Statements();
            ((DefaultTableModel)jTable_big.getModel()).setRowCount(0);
           for(int i=0;i<mms.length;i++){
               if(mms[i][0]==null) break;
              ((DefaultTableModel)jTable_big.getModel()).addRow(mms[i]);
             }

       double money =0;
       double mreal =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,5));
         out = ((String)jTable_big.getValueAt(i,6));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            mreal = mreal + Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
           jLabel_moneyreal.setText(String.valueOf(mreal));

        }
        if(jComboBox_type.getSelectedItem()=="供应商汇总表"){
            jLabel_tips.setText("Tips：所有供应商汇总");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][11] ,
            new String [] {
            "编号", "供应商编码","供应商名称", "联系人", "物料编号", "物料名称", "数量", "单价","价格","已付款", "备注"
            }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                                return   false;
                        }

        });
            Search_from_name sfn = new Search_from_name();
            jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(sfn.getName(3)));
            jXDatePicker_dateFirst.setFormats("yyyy-MM");  //日期的格式
            jXDatePicker_dateEnd.setFormats("yyyy-MM");  //日期的格式
            jLabel_real.setVisible(true);
            jLabel_moneyreal.setVisible(true);
            jButton_print.setVisible(false);  //打印按钮

            Manage manage = new Manage();
            String[][] mms = manage.Supplier_summary();
            ((DefaultTableModel)jTable_big.getModel()).setRowCount(0);
           for(int i=0;i<mms.length;i++){
               if(mms[i][0]==null) break;
              ((DefaultTableModel)jTable_big.getModel()).addRow(mms[i]);
             }

       double money =0;
       double mreal =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,8));
         out = ((String)jTable_big.getValueAt(i,9));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            mreal = mreal + Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
           jLabel_moneyreal.setText(String.valueOf(mreal));
        }
        if(jComboBox_type.getSelectedItem()=="客户汇总表"){
            jLabel_tips.setText("Tips：所有客户汇总");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][13] ,
            new String [] {
            "编号", "客户编码","客户名称", "联系人", "订单号", "产品名称", "交货日期", "投产数量","单位", "单价", "价格", "已付款","备注"
            }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                                return   false;
                        }

        });
            Search_from_name sfn = new Search_from_name();
            jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(sfn.getName(2)));
            jXDatePicker_dateFirst.setFormats("yyyy-MM");  //日期的格式
            jXDatePicker_dateEnd.setFormats("yyyy-MM");  //日期的格式
            jLabel_real.setVisible(true);
            jLabel_moneyreal.setVisible(true);
            jButton_print.setVisible(false);  //打印按钮

            Manage manage = new Manage();
            String[][] mms = manage.customer_summary();
            ((DefaultTableModel)jTable_big.getModel()).setRowCount(0);
           for(int i=0;i<mms.length;i++){               
               if(mms[i][0]==null) break;
              ((DefaultTableModel)jTable_big.getModel()).addRow(mms[i]);
             }

       double money =0;
       double mreal =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,10));
         out = ((String)jTable_big.getValueAt(i,11));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            mreal = mreal + Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
           jLabel_moneyreal.setText(String.valueOf(mreal));
        }
        if(jComboBox_type.getSelectedItem()=="送货单"){
            jLabel_tips.setText("Tips：客户送货单");
            jTable_big.setModel(new javax.swing.table.DefaultTableModel(
            new Object [0][8] ,
            new String [] {
            "编号", "订单号","产品名称", "投产数量", "单价", "总价","已付款",  "备注"
            }
        ){
            @Override
            public   boolean   isCellEditable(int   rowIndex,   int   mColIndex)   {
                                return   false;
                        }

        });
            Search_from_name sfn = new Search_from_name();
            jComboBox_name.setModel(new javax.swing.DefaultComboBoxModel(sfn.getName(2)));
            jXDatePicker_dateFirst.setFormats("yyyy-MM-dd");  //日期的格式
            jXDatePicker_dateEnd.setFormats("yyyy-MM-dd");  //日期的格式
            jLabel_real.setVisible(true);
            jLabel_moneyreal.setVisible(true);
            jButton_print.setVisible(true);  //打印按钮

           Manage manage = new Manage();
            String[][] mms = manage.Delivery_Note((String)jComboBox_name.getSelectedItem());
            ((DefaultTableModel)jTable_big.getModel()).setRowCount(0);
           for(int i=0;i<mms.length;i++){
               if(mms[i][0]==null) break;
              ((DefaultTableModel)jTable_big.getModel()).addRow(mms[i]);
             }

       double money =0;
       double mreal =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,5));
         out = ((String)jTable_big.getValueAt(i,6));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            mreal = mreal + Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
           jLabel_moneyreal.setText(String.valueOf(mreal));
        }
      jTable_big.getModel().addTableModelListener(new TableModelListener() {
      public void tableChanged(TableModelEvent e) {
       if(jTable_big.isEditing()&&save){
        int row = jTable_big.getEditingRow();
        int column = jTable_big.getEditingColumn();
       if(type==2||type==3){
          String[] s = new String[jTable_big.getColumnCount()];
            for(int i=0;i<s.length;i++)
               s[i] = (String)jTable_big.getValueAt(row, i);
          
            Operate opr = new Operate();
            opr.update(type/*客户资料/订单管理*/,jComboBox_type.getSelectedIndex(),s,
                    (String)jTable_big.getValueAt(jTable_big.getSelectedRow(), type));   
           }
        if(type==1){
            String[] s = new String[jTable_big.getColumnCount()-1];
            for(int i=0;i<s.length;i++)
            s[i] = (String)jTable_big.getValueAt(row, i+1);
            Operate opr = new Operate();
            opr.update(2, jComboBox_type.getSelectedIndex(), s[0], s,(String)jTable_big.getValueAt(jTable_big.getSelectedRow(), 0) );
        }
      }
    }
    });
    }//GEN-LAST:event_jComboBox_typeActionPerformed

    private void jComboBox_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_nameActionPerformed
        if(jTable_small.isEditing())
              jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
        jXDatePicker_dateFirst.setDate(null);  //清除日期选择框
        jXDatePicker_dateEnd.setDate(null);  //清除日期选择框
        ((DefaultTableModel)jTable_small.getModel()).setRowCount(0);
       if(type!=4){
        Search_from_name sfn = new Search_from_name();
        String[][] sfns = sfn.name_search(type,jComboBox_type.getSelectedIndex(),(String)jComboBox_name.getSelectedItem());
         ((DefaultTableModel)jTable_big.getModel()).setRowCount(0);
        for(int i=0;i<sfns.length;i++)
            ((DefaultTableModel)jTable_big.getModel()).addRow(sfns[i]);
        }
       else{
           Manage manage = new Manage();
            String[][] mms = null;
           if(jComboBox_type.getSelectedIndex()==1)
                 mms = manage.Statements((String)jComboBox_name.getSelectedItem());
           if(jComboBox_type.getSelectedIndex()==2)
                 mms = manage.Supplier_summary((String)jComboBox_name.getSelectedItem());
           if(jComboBox_type.getSelectedIndex()==3)
                 mms = manage.customer_summary((String)jComboBox_name.getSelectedItem());
           if(jComboBox_type.getSelectedIndex()==4)
                 mms = manage.Delivery_Note((String)jComboBox_name.getSelectedItem());
            ((DefaultTableModel)jTable_big.getModel()).setRowCount(0);
           for(int i=0;i<mms.length;i++){
               if(mms[i][0]==null) break;
              ((DefaultTableModel)jTable_big.getModel()).addRow(mms[i]);
             }
if(jComboBox_type.getSelectedIndex()==0){
       double money =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,5));
         out = ((String)jTable_big.getValueAt(i,6));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            money = money - Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
    }
  if(jComboBox_type.getSelectedIndex()!=0){
       double money =0;
       double mreal =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,5));
         out = ((String)jTable_big.getValueAt(i,6));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            mreal = mreal + Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
           jLabel_moneyreal.setText(String.valueOf(mreal));
    }
       }
    }//GEN-LAST:event_jComboBox_nameActionPerformed

    private void jMenuItem_addMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_addMousePressed
        // TODO add your handling code here:s
        if(type!=1)
         if(jTable_big.getSelectedRow()!=-1)   //no row selected
           ((DefaultTableModel)jTable_big.getModel()).insertRow(jTable_big.getSelectedRow()+1, new Object[0]);   //加在选择行之后
         else ((DefaultTableModel)jTable_big.getModel()).addRow(new Object[0]);

    }//GEN-LAST:event_jMenuItem_addMousePressed

    private void jMenuItem_deleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_deleteMousePressed
        // TODO add your handling code here:
        if(jTable_big.getSelectedRow()!=-1)   //no row selected
           {           
            int row = jTable_big.getSelectedRow();
            Operate opr = new Operate();
            if(type!=1){
                 String s= (String)jTable_big.getValueAt(row, type);
                 opr.delete_big(type, jComboBox_type.getSelectedIndex(), s);
               }
            else {
                String name= (String)jTable_big.getValueAt(row, 0);
                String id= (String)jTable_big.getValueAt(row, 1);
                opr.delete_small(2, jComboBox_type.getSelectedIndex(), name,id);
            }
            ((DefaultTableModel)jTable_big.getModel()).removeRow(row);  //删除选中行，单选
            ((DefaultTableModel)jTable_small.getModel()).setRowCount(0);
            jLabel_tips.setText("Tips：客户记录已删除");
            }  

        //修改数据库内容  待写

    }//GEN-LAST:event_jMenuItem_deleteMousePressed

    private void jMenuItem_add1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_add1MousePressed
        // TODO add your handling code here:
         Operate opr = new Operate();
         String[] s = new String[jTable_small.getColumnCount()];               
         ((DefaultTableModel)jTable_small.getModel()).addRow(new Object[0]);             
         jTable_small.setValueAt(String.valueOf(jTable_small.getRowCount()),jTable_small.getRowCount()-1,0);             
     
    }//GEN-LAST:event_jMenuItem_add1MousePressed

    private void jMenuItem_delete1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem_delete1MousePressed
        // TODO add your handling code here:
         if(jTable_small.getSelectedRow()!=-1)   //no row selected
            {
             int row = jTable_small.getSelectedRow();              
             String s= (String)jTable_small.getValueAt(row, type);  //产品名称
             Operate opr = new Operate();
             opr.delete_small(type, jComboBox_name.getSelectedIndex(), (String)jTable_big.getValueAt(jTable_big.getSelectedRow(), type),(String)jTable_small.getValueAt(row, 0));
             ((DefaultTableModel) jTable_small.getModel()).removeRow(row);   //删除选中行，单选
             for(int i=row;i<jTable_small.getRowCount();i++){
                 jTable_small.setValueAt(String.valueOf(i+1), i, 0);
                 String[] ss = new String[jTable_small.getColumnCount()];
                 for(int j=0;j<ss.length;j++)
                    ss[j] = (String)jTable_small.getValueAt(i,j);
                 opr.update(type/*客户资料/订单管理*/,jComboBox_name.getSelectedIndex(),
                             (String)jTable_small.getValueAt(i, 0),
                              ss,
                             (String)jTable_big.getValueAt(jTable_big.getSelectedRow(), type));
             }               
             opr.delete_small(type, jComboBox_name.getSelectedIndex(), (String)jTable_big.getValueAt(jTable_big.getSelectedRow(), type),String.valueOf(jTable_small.getRowCount()+1));

             }


        //修改数据库内容  待写
    }//GEN-LAST:event_jMenuItem_delete1MousePressed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
         /*table右键菜单*/
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
         if(jTable_small.isEditing())
                jTable_small.getCellEditor().stopCellEditing();
        if(evt.getButton()==MouseEvent.BUTTON3)
            if(type==1||type==2||type==3)
            {
              jPopupMenu1.show(evt.getComponent(), evt.getX(), evt.getY());
             // jTable_big.setRowSelectionInterval(evt.getY()/jTable_big.getRowHeight(),evt.getY()/jTable_big.getRowHeight());
              // jTable_father.setColumnSelectionInterval(evt.getX()/jTable_father.getColumnModel().getTotalColumnWidth(),evt.getX()/jTable_father.getColumnModel().getTotalColumnWidth());
            }
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        // TODO add your handling code here:
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
         if(jTable_small.isEditing())
                jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.getSelectedRow()!=-1)
         if(evt.getButton()==MouseEvent.BUTTON3)         
            {
              jPopupMenu2.show(evt.getComponent(), evt.getX(), evt.getY());
             // jTable_big.setRowSelectionInterval(evt.getY()/jTable_big.getRowHeight(),evt.getY()/jTable_big.getRowHeight());
              // jTable_father.setColumnSelectionInterval(evt.getX()/jTable_father.getColumnModel().getTotalColumnWidth(),evt.getX()/jTable_father.getColumnModel().getTotalColumnWidth());
            }
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void jXDatePicker_dateFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker_dateFirstActionPerformed
        // TODO add your handling code here:
       if(jTable_small.isEditing())
              jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
       String[][] str = null;
       if(jXDatePicker_dateEnd.getDate()!=null){
           ((DefaultTableModel)jTable_small.getModel()).setRowCount(0);
        if(type==3)
         {
             Time time = new Time(); 
             str = time.time_yMd(type,jComboBox_type.getSelectedIndex(),
                                            new SimpleDateFormat("yyyyMMdd").format(jXDatePicker_dateFirst.getDate()),
                                            new SimpleDateFormat("yyyyMMdd").format(jXDatePicker_dateEnd.getDate()));
         }
        else if (type == 4)
             {
           Manage manage = new Manage();
           if(jComboBox_type.getSelectedIndex()==0)
                 str = manage.all_manage(new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateEnd.getDate()));
           if(jComboBox_type.getSelectedIndex()==1)
                 str = manage.Statements((String)jComboBox_name.getSelectedItem(),new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateEnd.getDate()));
           if(jComboBox_type.getSelectedIndex()==2)
                 str = manage.Supplier_summary((String)jComboBox_name.getSelectedItem(),new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateEnd.getDate()));
           if(jComboBox_type.getSelectedIndex()==3)
                 str = manage.customer_summary((String)jComboBox_name.getSelectedItem(),new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateEnd.getDate()));
           if(jComboBox_type.getSelectedIndex()==4)
                 str = manage.Delivery_Note((String)jComboBox_name.getSelectedItem(),new SimpleDateFormat("yyyyMMdd").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMMdd").format(jXDatePicker_dateEnd.getDate()));
             }
         ((DefaultTableModel)jTable_big.getModel()).setRowCount(0);
             for(int i=0;i<str.length;i++){
                 if(str[i][0]==null) break;
                 ((DefaultTableModel)jTable_big.getModel()).addRow(str[i]);
             }
         if(type == 4){
             if(jComboBox_type.getSelectedIndex()==0){
       double money =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,5));
         out = ((String)jTable_big.getValueAt(i,6));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            money = money - Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
    }
  if(jComboBox_type.getSelectedIndex()!=0){
       double money =0;
       double mreal =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,5));
         out = ((String)jTable_big.getValueAt(i,6));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            mreal = mreal + Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
           jLabel_moneyreal.setText(String.valueOf(mreal));
    }
         }
        }
        
    }//GEN-LAST:event_jXDatePicker_dateFirstActionPerformed

    private void jXDatePicker_dateEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker_dateEndActionPerformed
        // TODO add your handling code here:
        if(jTable_small.isEditing())
              jTable_small.getCellEditor().stopCellEditing();
        if(jTable_big.isEditing())
                jTable_big.getCellEditor().stopCellEditing();
        String[][] str = null;
        if(jXDatePicker_dateFirst.getDate()!=null){
            ((DefaultTableModel)jTable_small.getModel()).setRowCount(0);
        if(type==3)       
        {
           Time time = new Time();
            str = time.time_yMd(type,jComboBox_type.getSelectedIndex(),
                                            new SimpleDateFormat("yyyyMMdd").format(jXDatePicker_dateFirst.getDate()),
                                            new SimpleDateFormat("yyyyMMdd").format(jXDatePicker_dateEnd.getDate()));  
             }
        else if(type==4)
              {
           Manage manage = new Manage();
           if(jComboBox_type.getSelectedIndex()==0)
                 str = manage.all_manage(new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateEnd.getDate()));
           if(jComboBox_type.getSelectedIndex()==1)
                 str = manage.Statements((String)jComboBox_name.getSelectedItem(),new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateEnd.getDate()));
           if(jComboBox_type.getSelectedIndex()==2)
                 str = manage.Supplier_summary((String)jComboBox_name.getSelectedItem(),new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateEnd.getDate()));
           if(jComboBox_type.getSelectedIndex()==3)
                 str = manage.customer_summary((String)jComboBox_name.getSelectedItem(),new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMM").format(jXDatePicker_dateEnd.getDate()));
           if(jComboBox_type.getSelectedIndex()==4)
                 str = manage.Delivery_Note((String)jComboBox_name.getSelectedItem(),new SimpleDateFormat("yyyyMMdd").format(jXDatePicker_dateFirst.getDate()),
                                  new SimpleDateFormat("yyyyMMdd").format(jXDatePicker_dateEnd.getDate()));
             }

           ((DefaultTableModel)jTable_big.getModel()).setRowCount(0);
                   for(int i=0;i<str.length;i++){
                         if(str[i][0]==null) break;
                        ((DefaultTableModel)jTable_big.getModel()).addRow(str[i]);
                }

          if(type == 4){
             if(jComboBox_type.getSelectedIndex()==0){
       double money =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,5));
         out = ((String)jTable_big.getValueAt(i,6));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            money = money - Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
    }
  if(jComboBox_type.getSelectedIndex()!=0){
       double money =0;
       double mreal =0;
       String in = null;
       String out = null;
       for(int i=0;i<jTable_big.getRowCount();i++){
         in = ((String)jTable_big.getValueAt(i,5));
         out = ((String)jTable_big.getValueAt(i,6));
         if(in!=null&&!in.equals(""))
          if(in.matches("^?\\d*(\\.)?\\d*$"))
            money = money + Double.parseDouble(in);
         if(out!=null&&!out.equals(""))
          if(out.matches("^?\\d*(\\.)?\\d*$"))
            mreal = mreal + Double.parseDouble(out);
       }
           jLabel_money.setText(String.valueOf(money));
           jLabel_moneyreal.setText(String.valueOf(mreal));
    }
     }

        }
    }//GEN-LAST:event_jXDatePicker_dateEndActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1_Library;
    private javax.swing.JButton jButton_FinanceManage;
    private javax.swing.JButton jButton_Information;
    private javax.swing.JButton jButton_home;
    private javax.swing.JButton jButton_orderManage;
    private javax.swing.JButton jButton_print;
    private javax.swing.JComboBox jComboBox_name;
    private javax.swing.JComboBox jComboBox_type;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_all;
    private javax.swing.JLabel jLabel_date;
    private javax.swing.JLabel jLabel_head;
    private javax.swing.JLabel jLabel_money;
    private javax.swing.JLabel jLabel_moneyreal;
    private javax.swing.JLabel jLabel_name;
    private javax.swing.JLabel jLabel_real;
    private javax.swing.JLabel jLabel_tips;
    private javax.swing.JLabel jLabel_to;
    private javax.swing.JLabel jLabel_type;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem_add;
    private javax.swing.JMenuItem jMenuItem_add1;
    private javax.swing.JMenuItem jMenuItem_delete;
    private javax.swing.JMenuItem jMenuItem_delete1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel_button;
    private javax.swing.JPanel jPanel_center;
    private javax.swing.JPanel jPanel_head;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_big;
    private javax.swing.JTable jTable_small;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker_dateEnd;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker_dateFirst;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;
    private int type = 0;  //0主页  1产品库 2客户资料 3订单管理 4财务管理
    private boolean save=true;
    private JDialog aboutBox;

    private class ActionListenerImpl implements ActionListener {

        public ActionListenerImpl() {
        }

        public void actionPerformed(java.awt.event.ActionEvent evt) {
            Auto_goods ags = new Auto_goods();
            int row = jTable_small.getSelectedRow();
            String[] s = ags.auto_goods(jComboBox_type.getSelectedIndex(), (String) jTable_big.getValueAt(jTable_big.getSelectedRow(), 2), (String) jTable_small.getValueAt(row, 2));
            if (jComboBox_type.getSelectedIndex() == 0) {
                jTable_small.setValueAt(s[0], row, 1);
                jTable_small.setValueAt(s[1], row, 2);
                jTable_small.setValueAt(s[2], row, 4);
                jTable_small.setValueAt(s[3], row, 7);
                jTable_small.setValueAt(s[4], row, 8);
                jTable_small.setValueAt(s[5], row, 9);
                jTable_small.setValueAt(s[6], row, 10);
                jTable_small.setValueAt(s[7], row, 11);
                jTable_small.setValueAt(s[8], row, 12);
            }
            if (jComboBox_type.getSelectedIndex() == 1) {
                jTable_small.setValueAt(s[0], row, 1);
                jTable_small.setValueAt(s[1], row, 2);
                jTable_small.setValueAt(s[2], row, 4);
                jTable_small.setValueAt(s[3], row, 8);
            }
        }
    }
}
